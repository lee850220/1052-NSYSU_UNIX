                          UNIX系統編程
                        編程＃3
                       “客觀上更好的遊戲”


截止日期：4月14日星期五下午11:59。

提交方法：您將在課程網站上發布，就像上一個
                   分配。

提交規則：我要求您遵守這些規則：

                  提交一個名為“<你的學生ID> .pa3.tar”的文件
該tar文件將包含一個名為的目錄
                     “<你的學生證> .pa3”。該目錄的內部將是
                     8個文件：cut，drop，exam，get，pa3.sh，put，reset，trydoor
                  2.截止日期後提交的文件將被忽略。
                     （這意味著：沒有提交關於此作業的延遲。）
                     （順便說一句，如果你不轉讓你的作業，你
                      可能會失敗類。這是事實。所以開始
                      提早問問題。）
                  
                  這是一個大班。除非你們都遵循上面的規定
                  規則，工作的工作變得如此艱辛。所以我INSIST你
                  遵守上述規定。如果沒有，我們不會接受你的
                  家庭作業。

                  如果您對這些規則有任何疑問，您可以發布
                  問題到課程網站。


獲得幫助： - 教授的營業時間為周一的12：30-2：30，
                  並在星期五從10：00-12：00，在房間9037.他也可以
                  通過電子郵件到達。
                 -  TAT也可以回答您的問題。
                 - 關於作業的問題可以發佈到
                  討論論壇
                 - 你也可以和你討論作業的想法
                  同學們這樣的討論對你來說是非常有幫助的
                  學習 - 如果你只談論一般概念
作業的步驟。
 - 但是，如果您告訴其他學生具體細節
的實現，那麼你沒有幫助對方
學習;你正在為他們做工作。
                    換句話說，你是欺騙。你不能顯示另一個
學生任何答案的任務部分。

作弊政策：鼓勵學生組成學習小組。但這不是
                  平均分享代碼如果發現學生正在分享工作，
他們可以在整個課程中獲得0，甚至更糟。
                  這是欺騙讓另一個學生看到你的工作，或者
                  當你的代碼在上面時，讓他們看著你的肩膀
屏幕。
知道你被騙的好方法：如果你有代碼，
你的解決方案只是因為另一個學生告訴你放
它在那裡，但你實際上並不了解它。
如果您還不確定，可以向TA詢問更多信息
說明。
                  我們總是尋找作弊的證據，所以不要這樣做。
                  （無論如何，即使你沒有被抓住，那些誰
                  複製作業不會學習材料，所以他們
                  考試失敗）

最重要的編程分配是成績的很大一部分。
事情要知道：這個大點值意味著，如果你不這樣做，你
將失敗。
大點值也解釋了為什麼政策反對
作弊是嚴格執行的。



















 -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   - 
  -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   - 

作業摘要：

,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
：第1部分作業概念：
“”“”“”“”“”“”“”“”“”“”“”“

此任務擴展了最後的功課，以允許您向命令提供對象。在原始遊戲中，一個例子是“x”命令，可以讓你檢查對象。我們上次無法實現它，因為“x”命令需要一個參數（您想要檢查的對象）。

現在我們已經在過去幾個星期了解了UNIX，我們知道如何使用參數。我們也知道如何創建循環，條件測試和變量。事實上，我們現在已經足夠了解csh，我們不會像以前一樣做功課，如果我們重新啟動，我們反而會在單個cshell腳本中完成整個操作，而不會使用奇怪的別名。雖然我們不會重做事情，但是我們將使用cshell腳本來創建新的部分。 （注意：您寫的新腳本都必須在cshell中，但原始的pa3.sh文件的別名必須是bash（即默認的shell），因為它需要使用“2”的重定向方法。）

除了添加新命令x，drop，get，put，cut，reset，score和quit之外，此作業還會修改目錄結構。我對這些dunnet功課的原創靈感就是文本遊戲的房間與UNIX中的目錄相關聯。那我們可以進一步比較。在原始遊戲中，有一個被毛巾隱藏的洞。這種情況可以用隱藏的目錄建模。而原來的遊戲也有一個被鎖定的房間。可以通過刪除該房間的目錄的權限來建模這種類型的情況。











,,,,,,,,,,,,,,,,,,,,,,,,,
：第2部分提供的文件：
'''''''''''''''''''''''''''

如果您正在閱讀此文件，那麼您必須對該作業進行解壓縮。
查看untarred目錄，您將看到：

％ls
pa3.sh README rooms.tar演練
％

在上述文件中，首先註意演練文件。這幾乎是
我剛才發布的同一個文件。這是新遊戲的演練。
要開始了解此作業，請先閱讀此文件。 （如果您已經讀過較早的文件，可以使用“diff”來查看更改的部分，）

二，注意房間文件。這個文件與幾天前發布的文件幾乎相同。它包含這個任務的所有房間。所有物品都位於正確的位置，紅房間的隱藏孔被命名為“.h”。還有一些tar文件創建的新目錄，如演練文件的第670-682行所描述。

第三，請注意pa.sh文件，這幾乎與幾天前發布的文件相同。這個文件本質上是我對作業2的解決方案（但稍微修改以支持新的作業），以及一些用於調用要編寫的cshell腳本的代碼。該文件有評論，你應該閱讀它。即使你不需要改變它，閱讀它將有助於澄清任務。現在讓我們來看看：

％head -51 pa3.sh |尾巴-7
＃以下6個命令需要您編寫腳本，如下所示：
別名get ='〜/ get'
別名drop ='〜/ drop'
別名x ='〜/考
別名reset ='〜/ reset'
別名put ='〜/ put'
別名cut ='〜/ cut'
％

上述行顯示將調用您將在此作業中創建的六個腳本的別名代碼。請注意，“getall”函數不再存在，因為現在我們可以說“get all”（或“get gold”，“get ax”等）。
還要注意上面的別名並不提到論據，但你的腳本會得到論據。我是什麼意思？那麼，如果你輸入“x gold”，那麼別名“x ='〜/ exam'”將替換你用別名鍵入的x，從而執行這個命令：“〜/ exam gold”。顯然，您的考試腳本會收到“黃金”參數作為其第一個參數。

在上面，也注意到有一個別名為“cut”，因為這樣
原始遊戲中的命令之一。不幸的是，“cut”也是一個unix命令。我們不僅學習了這個命令，而且我們將需要在我們的腳本中使用cut。這會導致一個問題，但是，因為我們有別名切割，所以如何運行原始命令？答案是指定剪切可執行文件的完整路徑（可以通過使用“哪個”命令找到）。另外，順便說一下，之前的作業你定義了“睡眠”別名。 “睡眠”出現同樣的問題，因為它也是在您的腳本之一中使用的UNIX命令。）

現在，我們再來看一下這個文件：
％head -15 pa3.sh |尾巴-4
＃八個動作有回溯和向前運動。
＃回溯移動：向前移動：成功：失敗：
別名nw ='BacktrackTest se>＆〜/ X && cd .. || cd nw>＆〜/ X && l || nogo'
別名ne ='BacktrackTest sw>＆〜/ X && cd .. || cd ne>＆〜/ X && l || nogo'
％

從上面我們看到，我精簡了做運動的方式。這種變化是必要的，因為“w”方向必須賦予新的能力，我們可以在這裡看到：
％head -34 pa3.sh |尾巴-9
＃最後的運動，西部是特別的，因為在〜/ pa3 / start / e / e / n / w的電子門可以防止一個位置的向前運動。
＃你必須編寫“trydoor”腳本來處理這種情況。另外，因為電子門自身重新鎖定，所以我們需要重新安裝門。我們可以通過僅在進入鎖定的房間後鎖定才可以做到這一點，但代碼對我們來說更簡單，只需要永遠鎖定房間，而不用檢查是否已經鎖定：
別名w ='〜/ trydoor; BacktrackTest e>＆〜/ X && cd .. || cd w>＆〜/ X && l || nogo; \
         chmod u-x〜/ pa3 / start / e / e / n / w'
％

在這裡我們看到你必須寫一個“trydoor”腳本。這個腳本有
將不可執行的“w”子目錄轉為可執行的可能性。
這將允許“cd w”命令（稍後執行
以上別名）取得成功。我們也注意到，無論什麼
否則（即不是命令=協調依賴於任何東西），當“w”命令完成時，電子門目錄將始終被鎖定。
這樣做的結果是使玩家每次進入房間時必須重新輸入代碼。

還有運行遊戲的命令：
％head -61 pa3.sh |尾巴-9
＃以下命令啟動遊戲。這就像最後的作業，除了：
＃1）它使用我的房間解決方案（rooms.tar）和
＃2）它通過使目錄不可執行來鎖定電子門。 （當我創建了rooms.tar時，我無法自動將目錄“鎖定”，因為tar程序需要訪問該目錄，以便將其解壓縮。同樣，您會注意到我們需要“解鎖”運行rm -r前的目錄：
別名game ='cd〜 chmod u + x pa3 / start / e / e / n / w>＆〜/ X; rm -r pa3>＆〜/ X; \
            tar -xf rooms.tar>＆〜/ X; cd pa3 / start; chmod u-x e / e / n / w;明確;\
l; PS1 =“>”'
％

該命令與最後一個編程分配非常相似。區別
涉及處理鎖定的房間。正如上面的評論所解釋的，tar不會
在沒有權限的情況下工作。

接下來，我們來看一下我已經為你實現的一個新命令：
％head -65 pa3.sh |尾巴-3
＃這個命令“退出”遊戲。它會創建一個“$”提示來指示這一點。
alias quit ='score; cd〜; unalias l look BacktrackTest nogo n e w s ne nw se sw i \
           睡覺挖出放棄x重置放剪切遊戲退出得分齊平; PS1 = \ $ \'
％

在這裡，你可以看到，quit命令可以做你想要的：它得到
擺脫所有的別名，帶我們回到主目錄，並恢復
正常的bash提示符為“$”。但它也稱為“得分”命令。什麼是
那？那我們來看看看看：

％tail -2 pa3.sh |頭-1
別名得分='echo“你必須實現這個”'
％

哦，這是一個你需要實現的別名（但不調用任何新的）
腳本）。詳細內容將在第3部分中解釋。

另外，你還必須實現以上線路，
（其細節也將在下一部分進行描述），我們可以在這裡看到：

％tail -1 pa3.sh
alias flush ='echo“你必須實現這個”'


,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
：第3部分。
'''''''''''''''''''''''''''''''''''
vvvvvvv
pa3.sh：
^^^^^^^
第69行：別名得分='echo __________________'
         您的解決方案將為迴聲提供正確的信息
命令。你不會使用“;”或“&&”或“||”。

         那麼分數是多少？有4寶藏：金，白金，鑽石，
和手鐲。玩家可以沖洗其他物品，並將出現在其中
寶箱（如果我們玩剩下的遊戲），但那些其他的
物品不給點。每個寶物都值10分。

         怎麼做？那麼，我們需要一種方式來計算多少寶藏
寶庫（即檢查那4個文件的目錄）和
然後將它乘以10.（注意：你不能只是堅持一個“0”之後
數字，因為沒有寶藏 - >“0分”，不是“00分”。）

第70行：別名flush ='__ 1__ || __2__; __3__ &&（__4__）'
         __1__：檢查你是否在與小便池的房間裡。
__2__：打印一個關於沒有什麼可以沖洗的消息（因為
你不在小便池的房間裡）。
         __3__：檢查你是否在與小便池的房間裡。
__4__：這是幾個命令。
它從holdtreasure目錄中移動所有內容。
它打印Whoosh！ < - 是的！需要，使用\引用
它打印一個空行。
它執行得分命令。


vvvvv
下降：
^^^^^
我不會給你一個一行的，因為它對你來說足夠簡單
弄清楚。此腳本將文件從您的項目目錄移動到您的
當前目錄。只有幾個問題：
   如果玩家放棄“生命”或“保存”，則必須移動這兩個文件。
   如果播放器丟棄“軟盤”或“磁盤”，則必須移動這兩個文件。
   如果對像被丟棄，應該說“丟掉”。
   如果對像不在items目錄中，請說“你沒有拿著”。


vvvv
得到：
^^^^
此命令與drop相反，它從當前目錄中移動項目
到items目錄。像drop一樣，get必須移動軟盤和磁盤
和生命和保存文件對成對。如果你有這個消息，它必須打印出來
嘗試獲得不存在的東西。

但是get命令有以下幾種複雜性：
你必須支持像getall這樣實現的“get all”
   最後的作業
2.如果您嘗試拿起不可移動的東西（例如小便器或床），
   那麼你會得到一個適當的消息。
3.如果你在紅房間拿起毛巾，那麼你打印出來的信息
   孔，你將“.d”移動到“d”。 （但只能做一次，假設
   我：1）拿起毛巾（並得到洞的消息），2）放下毛巾，
   3）再次拿起毛巾（不要打孔）。
   
第1行：＃！/ usr / bin / tcsh
第2行：if（$ 1 == all）then
第3行：如果毛巾存在於房間中，請設置一個變量。
Lines4-6：mv ?? [^ midxburn] *〜/ pa3 / items>＆〜/ X && echo“你選擇了”。 || \
            （ls ?? [xumbird] *>＆〜/ X && echo“你不能拿起來。”）|| \
            迴聲“這裡沒有什麼可以得到的”。
這是以前作業中getall的解決方案。因為它是
從早期的家庭作業，我只是給你在這裡。
第7行：else if（__1__）then
         該線測試是否請求的對像不存在
第8行：迴聲“你看不到這裡”。
第9行：else if（__1__）then
         這一行測試所請求的對像是否是這樣的
不能拾起（我們已經知道它是存在的
第7行）。那是什麼意思是不能被挑選的東西
向上？是不是沒有什麼可以拿起來的東西？
並沒有第6行使用“?? [^ midxburn] *”來找到可以做的事情
已接？那麼相反的是（至少對於...）
至少有3個字母的文件名，如我們的）。
並且使用這種模式，我們可以使用幻燈片43的=〜操作符
講座4.（注意：幻燈片警告=〜並不總是表現為
你會期望，但我已經測試了，這個工作。）
第10行：迴聲“你不能拿起來”。
第11行：其他
         在這一點上，我們知道玩家已經要求拿起一個有效的
對象真的在房間裡。只有幾件事情
處理（按任何順序）：
行12  -  ??：移動文件。
如果是生命/保存器或軟盤/磁盤，那麼也可以移動
對應的配對文件。
如果是毛巾，則設置相同的變量
第3行。
                        打印“你拿起____”
其中____是文件名。
行?? + 1：endif

行?? + 2：空行

行?? + 3：如果存在第3行的變量存在

線?? + 4端：在這一點上，我們知道我們拿起了毛巾，但是我們
               不知道這是否是我們第一次這樣做。

當我們第一次拿起毛巾時，有三件事情要發生：
               1）“.d”子目錄重新命名為“d”。
2）你打印“拿毛巾在地板上露出一個洞”。
3）“.hiddenhole”文件重命名為“_hiddenhole”
                  我以前沒有提到這個文件。如
你可以看到，它是一個隱藏的文件在紅房目錄。
其內容是：
％cat〜/ pa3 / start / e / e / n / d / d / sw / w / d / e / .hiddenhole
                    一個洞在地板上
我不知道是什麼。
                    ％

                  在這裡，我們看到該文件旨在與“l”
命令。 _hiddenhole不匹配?? [^ midxburn] *，所以它的
不是可以拾起的物體。但它顯示。
這是重要的，因為遊戲如何運作。如果你看
在內容文件中，他們告訴你可用的
退出。但這是一個隱藏的退出。如果我們不顯示，
那麼用戶在重新進入時不會被告知退出
房間。 （參見演練文件的第637至640行）


vvvvv
考試：
^^^^^

第1行：＃！/ usr / bin / tcsh

第2行：cp __1__ __2__ __3__>＆〜/ X
        該行處理的問題是對象可以是對象
在您的庫存或當前目錄中。為了簡化事情，我們
解決方案將兩個文件放在一個地方。 （當然沒有這樣的
作為“兩個文件”的東西：如果是在你的項目，那麼不在你的房間，
反之亦然。而且，它既不是地方。但這些都是
技術詭計我們的工作就是把這兩件事放在一起
一個地方。）
問：“一個地方”在哪裡？ A：使用〜/ pa3。
        問：要復制的文件名是什麼？答：這是第一個參數。

第3行：if（__1__）then
        該行檢查文件是否存在。

第4-5行：這裡，我們要顯示文件的內容。但讓我們
          考慮這些文件的設計。例如：
％cat〜/ pa3 / items / paper
          一紙紙
          該文件說：不要忘記輸入“幫助”來尋求幫助。另外，請記住
          這個詞：'蠕蟲'
          ％

          這裡的問題是“考試”命令不應該顯示
第一行。如果我們知道sed命令，這很容易。但我們
不知道那個命令，所以一定要用尾巴。問題是
我們不知道有多少行尾。對於這個文件就是這樣
尾巴-2。但是對於鏟子來說，這將是尾巴-1。而對於小便池
這將是尾巴-6。

那麼怎麼辦呢？我們使用2行：
第4行：創建一個變量並為其分配一個值
小於請​​求文件中的行數
目的。
（注意：你需要``和xargs'
（注意：觀察“wc -l F”之間的輸出差異
“cat F | wc -l”。）

第5行：尾__1__
現在我們知道要打印多少行，我們打印它，使用
適當的標誌。

第6行：rm __1__
        這將刪除我們在第2行創建的副本。

行7-9：這些行處理所請求的對像不在的情況
          一個你可以看到它的地方。打印一個適當的消息。
在這裡，我們要顯示文件的內容。但讓我們
其他
   迴聲“我看不到這裡”。
萬一


vvvv
切：
^^^^
第1行：＃！/ usr / bin / tcsh
第2行：如果你沒有斧頭，那麼
          第3行：你打印出來：“你沒有什麼可以打破事情的。”
第4行：如果沒有參數被發送到這個腳本，那麼
          第5行：打印：“您必須提供一個對象”。
第6行：如果第一個參數不是項目或當前目錄中的文件
          第7行：打印：“我在這裡看不到。”
第8行：如果物體不是電纜，那麼
          第9行：打印：你的斧子打碎成一百萬件。
第10行：從你的物品中取出斧頭。
第11-17行：否則，打印如下，第12-17行：
      當你打破以太網電纜，一切都開始模糊。你崩潰了
      一會兒，然後伸直自己。

      連接關閉

      恭喜你你完成了這個級別。
第18行：endif


vvvvvvvv
trydoor：
^^^^^^^^
第1行：＃！/ usr / bin / tcsh

行2：如果有一個名為“w”的子目錄，那麼

        第3行：如果該子目錄沒有您的權限
進入，然後
這裡有兩種方法可以測試。一個會是
只是試著看看w / cable文件。但我不會讓你這樣做的
那樣。相反，這將是一個練習使用的機會
unix切割命令。
步驟1：“ls -ld w”將在第4個位置包含一個“ - ”
您沒有權限（如果您有權限，則為“x”）
權限）。
第2步：使用cut來獲得第4個字符。注意：自
我們將別名“cut”，我們需要使用完整的路徑
切割命令。
步驟3：如果你考慮這個事實，那麼“ - ”就可以了
第四個字符意味著你可以跑進去
講座＃5的幻燈片1-7中描述的問題。那麼你
                        需要使用這些幻燈片中描述的技術。

                第4行：通知播放器需要3位數字代碼。
第5行：打印“在此輸入”：不打印換行符。
第6行：讀取鍵盤輸入。
第7行：如果輸入的代碼是869，那麼
第8行：使w目錄可執行。

第9-13行：
      其他
         echo對不起，該組合不正確。
      萬一
   萬一
萬一


vvvvvv
重啟：
^^^^^^

這個腳本更長。它需要假裝你正在使用一台舊電腦。
要了解其功能，請閱讀演練文件的280-297和322-386。

一個評論：那些老電腦很慢大概需要2秒鐘才能閱讀
             磁盤並響應命令。遊戲包括這個
特徵。如果你仔細觀察這個遊戲，那麼它就會有所拖延
部分。我們也會有同樣的拖延。我們這樣做是通過使用
             sleep命令帶有“2”參數（即休眠2秒）。
但是，睡眠是遊戲中的一個別名，所以UNIX的完整路徑
將需要睡眠命令。

第1行：＃！/ usr / bin / tcsh
第2行：如果你不在電腦的房間，那麼
          第3行：echo此操作不適用於此。
第4行：如果“.floppy”文件不存在（因為你沒有“放”），那麼
          第5行：睡眠2秒。
          第6行：打印“未找到引導扇區”。
第7行：其他
          第8行：睡眠2秒。
          第9行：echo當前時間為“date” __1__`
這裡，date命令打印日期和時間。自從我
沒有教這個命令，我只是在這裡給你。
你唯一需要知道的日期是它
打印各種東西，但是第六件事情就是這樣
打印是當前時間。所以我們需要打印
第六場。
          第10行：打印“輸入新時間”，而不轉到下一行。
          第11行：讀取鍵盤輸入（但是我們永遠不會使用輸入的值）
          行12-39：無限循環。
                第13行：打印“A”提示
                第14行：讀取鍵盤輸入。但是，輸入可以有空格
所以你需要使用雙引號來閱讀
整個字符串作為一個值。
                第15行：將第14行的變量更新為每個大寫
信（因為那些舊電腦不區分大小寫。）
                第16行：睡眠2秒。
                第17-38行：基於鍵盤輸入的開關語句
來自第14和15行
                    第18-20行：這些行處理DIR dos命令。
（DOS中的“DIR”就像UNIX中的“ls”）。
                                 我不想讓你輸出
軟盤的內容，所以我提供了
你有一個隱藏的文件“.dir”在這個房間。
所以所有你需要做的是貓的文件。
                    第21-32行：這些行處理TYPE dos命令。
（DOS中的“TYPE”類似於UNIX中的“cat”）。

它使用開關命令。對於這個命令，
有技術上的困難。假設
玩家在第14行輸入“xyz”，
那麼在第15行之後，我們會有“TYZ XYZ”。
現在，對於這個switch語句，我們想要
看看剛才輸入的文件名（XYZ在這裡
案件）。那麼，如何使用空格的字符串
並且只得到字符串中的第二個字？
答案：像數組一樣對待它。

                                 在這個switch語句中，有3種情況：
1您嘗試打印COMMAND.COM
所以：它說“不能打二進製文件”
2您嘗試打印FOO.TXT
所以說：“\ n組合是869”
3你試圖打印任何東西
所以：它說“找不到文件_ _ _ _”
在這裡，填寫空白的文件名
                    行33-35：這些行處理EXIT命令。
這是玩家想要的時候輸入的內容
停止使用PC。你需要打印一個
適當的信息。
你還需要離開腳本，這樣就可以了
第12行開始的無限循環不會繼續
無限地。
                    第36-37行：否則說“命令或文件名不正確”

第38行：結束
第39行：結束
第40行：endif


vvvv
放：
^^^^
這個腳本有很多事情要做。您可以：
  1）把任何東西放在小便池裡。
     在這種情況下，對像從〜/ pa3 / items移動到〜/ pa3 / holdtreasure
     （但軟盤/磁盤和生命/保護器必須成對移動。）
  2）將軟盤/磁盤放入電腦/ pc /驅動器。
     在這種情況下，您將從〜/ pa3 / items移動軟盤到./.floppy（在其他的
     單詞，你看不到它或檢索它，但它有一個效果 - 
     復位命令，如上所述，檢查其行＃4的存在
     這個“.floppy”文件，作為知道PC應該工作的方式。）
     而且，如果“軟盤”被移動到“.floppy”，那麼應該刪除“磁盤”。
  3）把鑰匙放在盒子裡。
     在這種情況下，這個鍵從〜/ pa3 / items移動到〜/ pa3 / holdkey
  4）打印各種錯誤信息。

另外，作為一個學習練習，您只能在此使用backspace（\）引用
腳本。 （只有\表示NO“和NO'，唯一要使用的地方是為
所需的收縮，如第2-4行中的“不要”，如下所述。）

第1行：＃！/ usr / bin / tcsh

行2-4：如果$ 1不在items目錄中，則打印“您沒有”。
          然後退出。

5-7行：如果您至少沒有給出三個參數，請打印“您必須
          提供間接對象“。然後退出。

第8行：endif

第9行：空行

第10行：如果第一個參數是“disk”，則將其變為“floppy”。
         注意：你不能說“設置$ 1 =軟盤”，因為它使用“$”
               在我們所知的情況下，“$”僅在您使用時才使用
               讀一個變量那麼我們怎麼能寫第一個參數呢？
               那麼參數列表也是一個具有特定名稱的數組，
               如講座＃4的幻燈片18所述。

第11行：與第10行類似，該行將$ 1的“生命”轉換為“保存”。

第12行：空行

第13-20行：使用第3個參數的switch語句。
             目的是使用多個彼此溢出的情況，
             為了重命名“pc”，“IBM”，“ibm”，“驅動器”和
             “電腦”全部為“PC”。換句話說，如果玩家輸入“put”
磁盤驅動器“第10行會將其轉換為”put floppy in drive“
             然後第13-20行將它變成“放在PC中的軟盤”。
             注意：關於案例4講座的幻燈片46有警告
                   聲明相互溢出。

第21行：空行

第22行：如果您的項目或當前目錄中不存在$ 3
第23行：回顯間接對像不在這裡。

第24行：否則如果你正在投入的是小便池
第25行：迴聲你聽到它在下面的一些水中聽到。
行26-28：將項目移動到〜/ pa3 / holdtreasure。也刪除對，在
             軟盤或保護盒的情況。

第29行：否則如果你正在投入的是那個盒子
第30行：如果你所提供的是關鍵的話
行31：將鍵移動到〜/ pa3 / holdkey
第32行：刪除框
第33-34行：打印以下內容，包括！：
當你放下鑰匙時，盒子開始晃動。最後它爆炸了“
有一個爆炸聲。關鍵似乎已經消失了！

行35-36：作為第30行的else子句，打印如下，包括
             '和！！：
你不能把它放在鑰匙盒裡！
第37行：endif

第38行：否則如果你正在投入的就是PC
第39-41行：如果你所提供的是軟盤，那麼將其移動到.floppy
             在當前目錄下還要刪除磁盤文件。
第42-43行：打印“你不能把它放在PC裡面”的else子句！
第44行：endif

第45行：別的

第46-47行：在這一點上，我們知道玩家正在試圖放一些東西
成為存在的對象，但該對像不是東西
把東西放進去是合法的。所以打印：
我不知道如何組合這些對象。也許你應該
只是嘗試放棄它。

第48行：endif